/*
* practice.c:22:24: warning: more '%' conversions than data arguments [-Wformat-insufficient-args]
    printf("Error: %c %s\n", ch); // Falta un argumento para %s

* practice.c:23:39: warning: data argument not used by format string [-Wformat-extra-args]
    printf("Error: %c %s\n", ch, str, num); // Demasiados argumentos para %s

* practice.c:29:22: warning: invalid conversion specifier '\x0a' [-Wformat-invalid-specifier]
    printf("Error: %z\n", num); // Especificador de formato no válido

practice.c:31:30: warning: format specifies type 'char *' but the argument has type 'char' [-Wformat]
    printf("Error: %s %c\n", ch, str); // Argumentos en el orden incorrecto

practice.c:31:34: warning: format specifies type 'int' but the argument has type 'char *' [-Wformat]
    printf("Error: %s %c\n", ch, str); // Argumentos en el orden incorrecto
*/

/*
*** FLAGS ***

Claro, aquí tienes una lista explicativa de las flags más comunes en `printf`:

1. `-`: Justifica a la izquierda el resultado de la conversión, añadiendo espacios en blanco a la derecha.
2. `0`: Rellena el campo con ceros a la izquierda si el ancho mínimo es mayor que la longitud del resultado.
3. `.`: Especifica la precisión en conversiones de punto flotante y la longitud máxima de cadenas.
4. `#`: Forzar el formato alternativo para algunos tipos de conversiones, como la notación científica para números en punto flotante (`%e`) o el prefijo `0x` para números hexadecimales (`%x`).
5. `+`: Imprime siempre el signo del número, incluso si es positivo.
6. `space` (espacio): Imprime un espacio antes de un número positivo si el número no tiene un signo impreso.

Estas flags te permiten controlar aspectos como la justificación, el relleno, la precisión, el formato y la impresión del signo en las conversiones realizadas por `printf`.
*/

Si tu proyecto permite el uso de la libft, deberás copiar su fuente y sus Makefile
asociados en un directorio libft con su correspondiente Makefile. El Makefile
de tu proyecto debe compilar primero la librería utilizando su Makefile, y después
compilar el proyecto.